[package]
name = "luwak"
version = "0.6.5"
authors = ["anak10thn <anak10thn@gmail.com>"]
edition = "2021"
license = "MIT"
repository = "https://github.com/mayarid/luwak"
description = "Secure and minimalize js runtime"

[features]
# "fake" feature that allows to generate docs on docs.rs
docsrs = []
# A feature that disables creation of startup snapshot during in the build script.
dont_create_runtime_snapshot = []
# A feature that allows excluding `./js/99_main.js` from the exported extension.
exclude_runtime_main_js = []
# A feature that disables embedding of the JavaScript source files in the binary.
# With this feature enabled, the sources must be consumed during build time,
# by creating a startup snapshot.
include_js_files_for_snapshotting = [
  "deno_core/include_js_files_for_snapshotting",
]
# A dev feature to disable creations and loading of snapshots in favor of
# loading JS sources at runtime.
__runtime_js_sources = ["dont_create_runtime_snapshot"]

[lib]
name = "luwaklib"
path = "lib.rs"

[[bin]]
name = "luwak"
path = "luwak.rs"

[build-dependencies]
deno_ast = { version = "0.29.3", features = ["transpiling"] }
deno_broadcast_channel = { version = "0.114.0" }
deno_cache = { version = "0.52.0" }
deno_console = { version = "0.120.0" }
deno_crypto = { version = "0.134.0" }
deno_fetch = { version = "0.144.0" }
deno_ffi = { version = "0.107.0" }
deno_fs = { version = "0.30.0", features = ["sync_fs"] }
deno_http = { version = "0.115.0" }
deno_io = { version = "0.30.0" }
deno_net = { version = "0.112.0" }
deno_node = { version = "0.57.0" }
deno_kv = { version = "0.28.0" }
deno_tls = { version = "0.107.0" }
deno_url = { version = "0.120.0" }
deno_web = { version = "0.151.0" }
deno_webidl = { version = "0.120.0" }
deno_websocket = { version = "0.125.0" }
deno_webstorage = { version = "0.115.0" }
deno_napi = { version = "0.50.0" }
deno_core = { version = "0.218.0" }

#lzzzz = '1.0'
task-local-extensions = "0.1.3"

[target.'cfg(windows)'.build-dependencies]
winres = "0.1.11"
winapi = "0.3.9"

[dependencies]
deno_ast = { version = "0.29.3", features = ["transpiling"] }
deno_broadcast_channel = { version = "0.114.0" }
deno_cache = { version = "0.52.0" }
deno_console = { version = "0.120.0" }
deno_crypto = { version = "0.134.0" }
deno_fetch = { version = "0.144.0" }
deno_ffi = { version = "0.107.0" }
deno_fs = { version = "0.30.0", features = ["sync_fs"] }
deno_http = { version = "0.115.0" }
deno_io = { version = "0.30.0" }
deno_net = { version = "0.112.0" }
deno_node = { version = "0.57.0" }
deno_kv = { version = "0.28.0" }
deno_tls = { version = "0.107.0" }
deno_url = { version = "0.120.0" }
deno_web = { version = "0.151.0" }
deno_webidl = { version = "0.120.0" }
deno_websocket = { version = "0.125.0" }
deno_webstorage = { version = "0.115.0" }
deno_napi = { version = "0.50.0" }
deno_core = { version = "0.218.0" }

fastwebsockets = "=0.4.4"
which = "4.2.5"
atty = "0.2.14"
console_static_text = "=0.8.1"
dlopen = "0.1.8"
encoding_rs = "0.8.33"
filetime = "0.2.16"
fs3 = "0.5.0"
http = "0.2.9"
hyper = { version = "0.14.26", features = ["server", "stream", "http1", "http2", "runtime"] }
libc = "0.2.126"
log = "0.4.20"
#lzzzz = '1.0'
netif = "0.1.6"
notify = "=5.0.0"
once_cell = "1.17.1"
regex = "1.7.0"
ring = "0.16.20"
serde = { version = "1.0.149", features = ["derive"] }
signal-hook-registry = "1.4.0"
sys-info = "0.9.1"
termcolor = "1.1.3"
tokio = { version = "1.19", features = ["full"] }
uuid = { version = "1.0.0", features = ["v4"] }
data-url = "0.1.1"
reqwest-middleware = "0.1.6"
http-cache-reqwest = "0.5.0"
async-trait = "0.1.57"
reqwest = { version = "0.11.3", features = ["stream"] }
futures-util = "0.3.14"
# indicatif = "0.15.0"
# num_cpus = "1.13.1"
clap = { version = "3.2.21", features = ["derive"] }

[target.'cfg(windows)'.dependencies]
fwdansi = "1.1.0"
winapi = { version = "0.3.9", features = ["commapi", "knownfolders", "mswsock", "objbase", "shlobj", "tlhelp32", "winbase", "winerror", "winsock2"] }

[target.'cfg(unix)'.dependencies]
nix = "=0.26.2"

[dev-dependencies]
# Used in benchmark
test_util = { path = "./test_util" }

[package.metadata.docs.rs]
features = ["docsrs"]
